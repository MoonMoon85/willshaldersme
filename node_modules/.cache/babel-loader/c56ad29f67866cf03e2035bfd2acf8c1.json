{"ast":null,"code":"function n() {\n  return (n = Object.assign || function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n\n      for (var o in t) {\n        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);\n      }\n    }\n\n    return n;\n  }).apply(this, arguments);\n}\n\nvar e = {\n  onChangeCallback: null,\n  signin: function signin(n, e) {\n    var t = this;\n    return a(n).then(function (n) {\n      if (n) {\n        if (n.user.password === e) return t.changeAuthToken(n.token), n.user;\n        throw new l(\"auth/wrong-password\", \"Password is wrong\");\n      }\n\n      throw new l(\"auth/user-not-found\", \"Email does not have an account\");\n    });\n  },\n  signup: function signup(n, e) {\n    var t = this;\n    return a(n).then(function (o) {\n      if (o) throw new l(\"auth/email-already-in-use\", \"Email is already in use\");\n      var r = {\n        token: String(Math.floor(1e4 * Math.random())),\n        user: {\n          email: n,\n          password: e\n        }\n      };\n      return u(r).then(function () {\n        return t.changeAuthToken(r.token), r.user;\n      });\n    });\n  },\n  signout: function signout() {\n    try {\n      return this.changeAuthToken(null), Promise.resolve();\n    } catch (n) {\n      return Promise.reject(n);\n    }\n  },\n  onChange: function onChange(n) {\n    var e = this;\n    this.onChangeCallback = n;\n\n    var t = function t(n) {\n      r(n).then(function (n) {\n        e.onChangeCallback(!!n && n.user);\n      });\n    },\n        o = window.addEventListener(\"storage\", function (n) {\n      \"auth-token\" === n.key && t(JSON.parse(n.newValue));\n    }, !1),\n        a = s(\"auth-token\");\n\n    return t(a), function () {\n      window.removeEventListener(\"storage\", o);\n    };\n  },\n  sendPasswordResetEmail: function sendPasswordResetEmail(n) {\n    return a(n).then(function (n) {\n      throw n ? (c(\"auth-pass-reset-code\", n.token), console.log(\"Your one-time use password reset code:\", n.token), new l(\"auth/cannot-send-email\", \"You're using Fake Auth, which cannot send password reset emails. These emails normally contain a link to your site with a special reset code. But worry not! Fake Auth has stored the reset code locally in your browser so you can simply go to your change password page now and choose a new password. This enables you to fully test your password reset flow and error states without involving emails.\")) : new l(\"auth/user-not-found\", \"Email does not have an account\");\n    });\n  },\n  confirmPasswordReset: function confirmPasswordReset(n, e) {\n    var t;\n    return e ? t = e : (t = s(\"auth-pass-reset-code\"), window.localStorage.removeItem(\"auth-pass-reset-code\")), i(t, {\n      password: n\n    }).then(function (n) {\n      if (n) return !0;\n      throw new l(\"auth/invalid-action-code\", \"Invalid password update code\");\n    });\n  },\n  changeAuthToken: function changeAuthToken(n) {\n    var e = this;\n    c(\"auth-token\", n), this.onChangeCallback && r(n).then(function (n) {\n      e.onChangeCallback(!!n && n.user);\n    });\n  }\n},\n    t = function t() {\n  return s(\"auth-db\", []);\n},\n    o = function o(n) {\n  return c(\"auth-db\", n);\n},\n    r = function r(n) {\n  return h(function () {\n    return t().find(function (e) {\n      return e.token === n;\n    });\n  });\n},\n    a = function a(n) {\n  return h(function () {\n    return t().find(function (e) {\n      return e.user.email === n;\n    });\n  });\n},\n    u = function u(n) {\n  return h(function () {\n    var e = t();\n    e.push(n), o(e);\n  });\n},\n    i = function i(e, r) {\n  return void 0 === r && (r = {}), h(function () {\n    var a = t(),\n        u = a.findIndex(function (n) {\n      return n.token === e;\n    });\n    return -1 !== u && (a[u].user = n({}, a[u].user, {}, r), o(a), !0);\n  });\n};\n\nfunction s(n, e) {\n  void 0 === e && (e = null);\n  var t = window.localStorage.getItem(n);\n  return t ? JSON.parse(t) : e;\n}\n\nfunction c(n, e) {\n  window.localStorage.setItem(n, JSON.stringify(e));\n}\n\n\"undefined\" != typeof window && 0 === t().length && o([{\n  user: {\n    email: \"demo@gmail.com\",\n    pass: \"demo\"\n  },\n  token: \"12345\"\n}]);\n\nvar h = function h(n) {\n  return new Promise(function (e) {\n    return setTimeout(function () {\n      e(n());\n    }, 200);\n  });\n};\n\nfunction l(n, e) {\n  var t = new Error(e);\n  return t.code = n, t;\n}\n\nl.prototype = Object.create(Error.prototype);\nexport default e;","map":null,"metadata":{},"sourceType":"module"}